;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;int counter = 0;
;
;void main() {
; 0000 0006 void main() {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0007     PORTC=0b00000000;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0008     DDRC=0b00000111;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0009 
; 0000 000A     PORTD=0b00001111;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 000B     DDRD=0b00000000;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 000C 
; 0000 000D     while (1) {
;PCODE: $00000016 VOL: 0
; 0000 000E         if (PIND.0==0) {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 000F             delay_ms(250);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0010             counter++;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0011         }
; 0000 0012         if (PIND.1==0) {
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0013             delay_ms(250);
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0014             if (counter > 0)
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0015                 counter--;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0016         }
;PCODE: $0000002C VOL: 0
; 0000 0017         if (PIND.2==0 && counter > 0) {
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0018             delay_ms(250);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0019             PORTC.0=1;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 001A 
; 0000 001B             while (counter) {
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 001C                 PORTC.2=1;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 001D                 delay_ms(250);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 001E                 if (PIND.3==0)
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 001F                     break;
;PCODE: $00000047 VOL: 0
; 0000 0020                 delay_ms(250);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0021 
; 0000 0022                 PORTC.2=0;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0023 
; 0000 0024                 if (PIND.3==0)
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0025                     break;
;PCODE: $00000051 VOL: 0
; 0000 0026                 delay_ms(250);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0027                 if (PIND.3==0)
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0028                     break;
;PCODE: $00000059 VOL: 0
; 0000 0029                 delay_ms(250);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 002A                 if (PIND.3==0)
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 002B                     break;
;PCODE: $00000061 VOL: 0
; 0000 002C 
; 0000 002D                 counter--;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 002E             }
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 002F             PORTC=0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0030             counter=0;
;PCODE: $0000006A VOL: 0
; 0000 0031         }
; 0000 0032         if (PIND.3==0) {
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0033             delay_ms(250);
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0034             counter=0;
;PCODE: $00000072 VOL: 0
; 0000 0035             PORTC=0x00;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0036             PORTD=0x11;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0037         }
; 0000 0038     }
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0039 }
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
